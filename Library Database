-- Create the database
CREATE DATABASE library;

-- Switch to the library database
USE library;

-- Create the Branch table
CREATE TABLE Branch (
    Branch_no INT PRIMARY KEY,
    Manager_Id INT,
    Branch_address VARCHAR(255),
    Contact_no VARCHAR(20)
);
    
-- Insert sample data into Branch table
INSERT INTO Branch (Branch_no, Manager_Id, Branch_address, Contact_no)
VALUES (1, 1001, 'Gandhinagar 2nd street', '+91-0000002255'),
       (2, 1002, 'Vietnam Colony', '+91-0000082227');
       
-- Create the Employee table
CREATE TABLE Employee (
    Emp_Id INT PRIMARY KEY,
    Emp_name VARCHAR(255),
    Position VARCHAR(100),
    Salary DECIMAL(10, 2),
    Branch_no INT,
    FOREIGN KEY (Branch_no) REFERENCES Branch(Branch_no)
);

-- Insert sample data into Employee table
INSERT INTO Employee (Emp_Id, Emp_name, Position, Salary, Branch_no)
VALUES (01, 'Sethu', 'Manager', 70000.00, 1),
       (02, 'Tharadhas', 'Clerk', 49000.00, 2),
       (03, 'Sagar Kottapuram', 'Librarian', 60000.00, 1),
       (04, 'Indhuchoodan', 'Supervisor', 65000.00, 2);
       
-- Create the Customer table
CREATE TABLE Customer (
    Customer_Id INT PRIMARY KEY,
    Customer_name VARCHAR(255),
    Customer_address VARCHAR(255),
    Reg_date DATE
);

-- Insert sample data into Customer table
INSERT INTO Customer (Customer_Id, Customer_name, Customer_address, Reg_date)
VALUES (3331, 'Nagavalli', '02 Madampalli House', '2021-12-15'),
       (3332, 'Sunny Tharakan', 'No 11 Ezhupunna Villa', '2022-02-28'),
       (3333, 'K K Joseph', 'Pulikattil st 2nd lane', '2023-01-10'),
       (3334, 'Vishnu Narayanan', 'Ponnummadhattil Illam','2023-12-17');
       
-- Create the IssueStatus table
CREATE TABLE IssueStatus (
    Issue_Id INT PRIMARY KEY,
    Issued_cust INT,
    Issued_book_name VARCHAR(255),
    Issue_date DATE,
    Isbn_book VARCHAR(20),
    FOREIGN KEY (Issued_cust) REFERENCES Customer(Customer_Id),
    FOREIGN KEY (Isbn_book) REFERENCES Books(ISBN)
);

-- Insert sample data into IssueStatus table
INSERT INTO IssueStatus (Issue_Id, Issued_cust, Issued_book_name, Issue_date, Isbn_book)
VALUES (02345, 3332, 'Malgudi Days','2023-11-11', 'ISBN 123'),
	   (02546, 3331, 'Sherlock Holmes', '2023-11-27', 'ISBN 900');

-- Create the ReturnStatus table
CREATE TABLE ReturnStatus (
    Return_Id INT PRIMARY KEY,
    Return_cust INT,
    Return_book_name VARCHAR(255),
    Return_date DATE,
    Isbn_book2 VARCHAR(20),
    FOREIGN KEY (Isbn_book2) REFERENCES Books(ISBN)
);

-- Insert sample data into ReturnStatus table
INSERT INTO ReturnStatus (Return_Id, Return_cust, Return_book_name, Return_date, Isbn_book2)
VALUES (02347, 3333, 'Rich Dad Poor Dad', '2023-12-27', 'ISBN 234'),
       (02348, 3334, 'To Kill a mockingbird', '2024-01-12', 'ISBN 901');
       
-- Create the Books table
CREATE TABLE Books (
    ISBN VARCHAR(20) PRIMARY KEY,
    Book_title VARCHAR(255),
    Category VARCHAR(100),
    Rental_Price DECIMAL(10, 2),
    Status VARCHAR(3),
    Author VARCHAR(255),
    Publisher VARCHAR(255)
);

-- Insert sample data into Books table
INSERT INTO Books (ISBN, Book_title, Category, Rental_Price, Status, Author, Publisher)
VALUES ('ISBN 123', 'Malgudi Days', 'Story Collection', 10.99, 'No', 'R K Narayan', 'Publisher A'),
       ('ISBN 234', 'Rich Dad Poor Dad', 'Personal Finance', 12.99, 'Yes', 'Robert Kiyosaki', 'Publisher B'),
       ('ISBN 900', 'Sherlock Holmes', 'Fiction', 9.99, 'No', 'Sir Arthur I C Doyle', 'Publisher C'),
       ('ISBN 901', 'To kill a Mockingbird', 'Non Fiction', 8.55, 'Yes', 'Harper Lee', 'Publisher D');
       
-- 1.Retrieve the book title, category, and rental price of all available books.
SELECT Book_title, Category, Rental_Price
FROM Books
WHERE Status = 'Yes';

-- 2. List the employee names and their respective salaries in descending order of salary.
SELECT Emp_name, Salary
FROM Employee
ORDER BY Salary DESC;

-- 3. Retrieve the book titles and the corresponding customers who have issued those books.
SELECT b.Book_title, c.Customer_name
FROM IssueStatus i
JOIN Books b ON i.Isbn_book = b.ISBN
JOIN Customer c ON i.Issued_cust = c.Customer_Id;

-- 4. Display the total count of books in each category.
SELECT Category, COUNT(*) AS Total_Books
FROM Books
GROUP BY Category;

-- 5. Retrieve the employee names and their positions for the employees whose salaries are above Rs.50,000.
SELECT Emp_name, Position
FROM Employee
WHERE Salary > 50000;

-- 6. List the customer names who registered before 2022-01-01 and have not issued any books yet.
SELECT c.Customer_name
FROM Customer c
LEFT JOIN IssueStatus i ON c.Customer_Id = i.Issued_cust
WHERE c.Reg_date < '2022-01-01' AND i.Issued_cust IS NULL;

-- 7. Display the branch numbers and the total count of employees in each branch.
SELECT Branch_no, COUNT(*) AS Total_Employees
FROM Employee
GROUP BY Branch_no

-- 8. Display the names of customers who have issued books in the month of June 2023.
SELECT DISTINCT c.Customer_name
FROM IssueStatus i
JOIN Customer c ON i.Issued_cust = c.Customer_Id
WHERE MONTH(i.Issue_date) = 6 AND YEAR(i.Issue_date) = 2023;

-- 9. Retrieve book_title from book table containing history in their title or category.
SELECT Book_title
FROM Books
WHERE Book_title LIKE '%history%' OR Category LIKE '%history';

-- 10. Retrieve the branch numbers along with the count of employees for branches having more than 5 employees.
SELECT Branch_no, COUNT(*) AS Employee_Count
FROM Employee
GROUP BY Branch_no
HAVING COUNT(*) > 5;
